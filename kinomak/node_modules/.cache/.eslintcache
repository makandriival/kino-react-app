[{"/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/index.js":"1","/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/reportWebVitals.js":"2","/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/home/Home.jsx":"3","/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/library/Library.jsx":"4","/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/App.jsx":"5","/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/search/Search.jsx":"6","/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/SinglePage.jsx":"7","/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/Loading.jsx":"8","/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/NothingHereYet.jsx":"9","/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/library/Watched.jsx":"10","/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/library/ToWatch.jsx":"11","/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/Pagination.jsx":"12"},{"size":535,"mtime":1657226917635,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1657226917636,"results":"15","hashOfConfig":"14"},{"size":1510,"mtime":1657891281923,"results":"16","hashOfConfig":"14"},{"size":612,"mtime":1657969304574,"results":"17","hashOfConfig":"14"},{"size":5398,"mtime":1658298382195,"results":"18","hashOfConfig":"14"},{"size":1199,"mtime":1657978516181,"results":"19","hashOfConfig":"14"},{"size":2827,"mtime":1658129443524,"results":"20","hashOfConfig":"14"},{"size":129,"mtime":1657823224385,"results":"21","hashOfConfig":"14"},{"size":143,"mtime":1657873818172,"results":"22","hashOfConfig":"14"},{"size":1434,"mtime":1657969457356,"results":"23","hashOfConfig":"14"},{"size":1458,"mtime":1657969445019,"results":"24","hashOfConfig":"14"},{"size":1001,"mtime":1658129555654,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"koiv6g",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"29"},"/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/index.js",[],[],[],"/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/reportWebVitals.js",[],[],"/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/home/Home.jsx",[],[],"/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/library/Library.jsx",["67"],[],"import React, { useState } from 'react'\nimport Watched from './Watched';\nimport ToWatch from './ToWatch';\nimport './library.css';\n\n\nexport default function Library(props) {\n\n\n  return (\n\n    <div className='library_container'>\n      <button onClick={()=>{props.setLibNav('watched')}} >Watched</button>\n      <button onClick={()=>{props.setLibNav('to_watch')}}>To Watch</button>\n\n      {props.libNav === 'watched' ? <Watched openModal={props.openModal} getClickedMovie={props.getClickedMovie} /> \n      : <ToWatch openModal={props.openModal} getClickedMovie={props.getClickedMovie} />}\n\n      </div>\n      \n  )\n}\n","/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/App.jsx",["68","69","70"],[],"\nimport './App.css';\nimport Home from './components/home/Home';\nimport Library from './components/library/Library';\nimport Search from './components/search/Search';\nimport SinglePage from './components/SinglePage';\nimport Loading from './components/Loading';\nimport {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [popMovies, setPopMovies] = useState([]);\n  const [activeNav, setActiveNav] = useState('home');\n  const [singlePage, setSinglePage] = useState('closed');\n  const [clickedMovie, setClickedMovie] = useState({});\n  const [keyWord, setKeyWord] = useState('doctor');\n  const [libNav, setLibNav] = useState('watched');\n  const [watchedArr, setIdWatchedArr] = useState([])\n  const [toWatchArr, setIdToWatchArr] = useState([]);\n  const [page, setPage] = useState(1);\n  const [searchData, setSearchData] = useState([]);\n\n  const apiKey = '89fd381db9ad27b0433e7f45be441eda';\n  const searchUrl = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${keyWord}&page=${page}`;\n  const popMoviesUrl = 'https://api.themoviedb.org/3/trending/movie/week?api_key=89fd381db9ad27b0433e7f45be441eda';\n\n  let watched = [];\n  let idWatchedArr = [];\n  let toWatch = [];\n  let idToWatchArr = [];\n\n  const handleWatched = ()=>{\n    console.log('handleWatched');\n    let getLocal = localStorage.getItem('listWatched');\n    getLocal === null ? watched = [] : watched = JSON.parse(getLocal);\n    watched.map((movie)=>{idWatchedArr.push(movie.id)});\n    setIdWatchedArr(idWatchedArr);\n    const pushData = ()=>{\n      watched.push(clickedMovie);\n    };\n    !idWatchedArr.includes(clickedMovie.id) ? pushData() :  console.log('Already in Watched List!');\n    localStorage.setItem('listWatched' , JSON.stringify(watched));\n  };\n\n  const handleToWatch = ()=>{\n    let getLocal = localStorage.getItem('listToWatch');\n    getLocal === null ? toWatch = [] : toWatch = JSON.parse(getLocal);\n    // console.log(toWatch);\n    toWatch.map((movie)=>{idToWatchArr.push(movie.id)});\n    setIdToWatchArr(idToWatchArr);\n    const pushData = ()=>{\n      toWatch.push(clickedMovie);\n    };\n    !idToWatchArr.includes(clickedMovie.id) ? pushData() :  console.log('Already in To Watch List!');\n    localStorage.setItem('listToWatch' , JSON.stringify(toWatch));\n  };\n\n  \n  \n\n\n  useEffect(()=>{\n      axiosPopMovies();\n      axiosSearch();\n      \n    }, []);\n      const axiosPopMovies = async()=>{\n          const res = await axios.get(popMoviesUrl).then(data=>data.data.results);\n          setPopMovies(res);\n        \n        };       \n        const axiosSearch = async ()=>{\n            // const search = await axios.get(searchUrl).then(data => data.data.results);\n            const pageData = await axios.get(searchUrl).then(data => data);\n            setSearchData(pageData);\n            \n            // localStorage.setItem('searchResults', JSON.stringify(search))\n        };\n        \n  const handleInput = (key)=>{\n    setKeyWord(key);\n  }      \n\n  const handleSearch = ()=>{\n    axiosSearch(); \n    \n    setActiveNav('search');\n    \n  }\n  \n\n  return (\n    <div>\n        <header>\n            <h2>KinoMak</h2>\n            <div className='search_conteiner' >\n                <label className ={ activeNav === 'library' ? 'hidden' : 'search' }  htmlFor=\"search\">\n                    <input onChange={(evt)=>{handleInput(evt.target.value)}} type=\"text\" />\n                    <button onClick={()=>{handleSearch()}} >search</button>\n                </label>\n            </div>\n            <nav>\n                <button className={activeNav === 'home' ? 'active' : 'home_btn'} onClick={()=>{setActiveNav('home')}}>home</button>\n                <button className={activeNav === 'library' ? 'active' : 'library_btn'} onClick={()=>{setActiveNav('library')}}>library</button>\n            </nav>\n        </header>\n    \n\n      { popMovies !== null ?\n      (activeNav === 'home' ? <Home popMovies={popMovies} getClickedMovie={(clickedMovie)=>{setClickedMovie(clickedMovie)}} openModal={(singlePage)=>{setSinglePage(singlePage)}}/> \n      : activeNav === 'library' ? <Library libNav={libNav} setLibNav={(libNav)=>{setLibNav(libNav)}} openModal={(singlePage)=>{setSinglePage(singlePage)}} getClickedMovie={(clickedMovie)=>{setClickedMovie(clickedMovie)}} /> \n      : activeNav === 'search' ? <Search searchData={searchData} axiosSearch={()=>{axiosSearch()}} page={page} setPage={(page)=>{setPage(page)}} keyWord={keyWord} openModal={(singlePage)=>{setSinglePage(singlePage)}} getClickedMovie={(clickedMovie)=>{setClickedMovie(clickedMovie)}} />\n      : alert('Rendering error!>'))\n      : <Loading/>\n      }\n\n      {singlePage === 'open' ? <SinglePage toWatchArr={toWatchArr} watchedArr={watchedArr} handleToWatch={()=>{handleToWatch()}} handleWatched={()=>{handleWatched()}} closeSinglePage={(singlePage)=>{setSinglePage(singlePage)}}\n       clickedMovieData={clickedMovie}/> : console.log('s p closed!')}\n\n  <footer>\n    <span className='reserved'>KinoMak Reserved Ⓒ </span>\n      <nav className='nav_footer'>\n                <button className={activeNav === 'home' ? 'active' : 'home_btn'} onClick={()=>{setActiveNav('home')}}>home</button>\n                <button className={activeNav === 'library' ? 'active' : 'library_btn'} onClick={()=>{setActiveNav('library')}}>library</button>\n      </nav>\n    \n  </footer>     \n        \n    </div>\n  );\n}\n\nexport default App;\n","/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/search/Search.jsx",[],[],"/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/SinglePage.jsx",["71","72","73"],[],"import { useState, useEffect } from \"react\";\nimport React from 'react'\n\nexport default function SinglePage(props) {\n    const imgBaseUrl = 'http://image.tmdb.org/t/p/w500';\n    const movie = props.clickedMovieData;\n    const wArr = props.watchedArr;\n    const tArr = props.toWatchArr;\n    const [ wBtn , setWBtn ] = useState('add');\n    const [tBtn , setTBtn] = useState('add');\n    \n    \n    useEffect(()=>{\n      wArr.includes(movie.id) == true ? setWBtn('del') : setWBtn('add');\n      tArr.includes(movie.id) == true ? setTBtn('del') : setTBtn('add');\n    }, []);\n\n    const handleBtnWatched = ()=>{\n      props.handleWatched();   \n      setWBtn('del');\n      // console.log(wBtn);\n    }\n    const handleDelWatched = ()=>{\n      handleDeleteWatched(movie.id);\n      setWBtn('add');\n      \n    };\n\n    const handleBtnToWatch = ()=>{\n      props.handleToWatch();   \n      setTBtn('del');\n      // console.log(wBtn);\n    }\n    const handleDelToWatch = ()=>{\n      handleDeleteToWatch(movie.id);\n      setTBtn('add');\n      // console.log(wBtn);\n    };\n\n\n\n    const handleDeleteWatched = (id)=>{\n      const watchedListData = localStorage.getItem('listWatched');\n      const watchedList = JSON.parse(watchedListData);\n      const movieIdx = watchedList.indexOf(watchedList.find(elem => elem.id === id))\n      watchedList.splice( movieIdx, 1);\n      localStorage.setItem('listWatched' , JSON.stringify(watchedList));\n      console.log(movieIdx)\n    };\n\n    const handleDeleteToWatch = (id)=>{\n      const toWatchListData = localStorage.getItem('listToWatch');\n      const toWatchList = JSON.parse(toWatchListData);\n      const movieIdx = toWatchList.indexOf(toWatchList.find(elem => elem.id === id))\n      toWatchList.splice( movieIdx, 1);\n      localStorage.setItem('listToWatch' , JSON.stringify(toWatchList));\n      console.log(movieIdx)\n    };\n\n  return (\n    <div className='single_page'>\n      \n       <h2>{movie.title}</h2> \n      <div className=\"single\">\n       <img src={imgBaseUrl+movie.poster_path} alt={movie.title}/>\n       <span className='rate' >Rate: {movie.vote_average}</span>\n       <p className='overview'>{ movie.overview }</p>      \n       <div>\n           {wBtn === 'add' ? <> <button onClick = {()=>{handleBtnWatched()}} >Add to Watched</button> </>\n           : wBtn === 'del' ? <> <button onClick={()=>{handleDelWatched()}}>Remove from Watched</button> </> \n           : alert('btn watched broken!') } \n\n       { tBtn ==='add' ? <button onClick = {()=>{handleBtnToWatch()}} >Add To To-Watch</button> : \n         tBtn ==='del'? <button onClick = {()=>{handleDelToWatch()}} >Remove from To-Watch</button> \n         : alert('btn to watch broken!')\n       }\n       \n\n       </div>\n       <button className=\"close_btn\" onClick={()=>{props.closeSinglePage('closed')}}>X</button>\n      </div>\n    </div>\n  )\n}\n","/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/Loading.jsx",[],[],"/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/NothingHereYet.jsx",[],[],"/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/library/Watched.jsx",[],[],"/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/library/ToWatch.jsx",[],[],"/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/Pagination.jsx",["74"],[],"import { useState } from \"react\";\nimport React from 'react'\n\nexport default function Pagination(props) {\nconst [reload, setReload] = useState('');\nconst page = props.page;\nconst searchData = props.searchData.data;\nconst totalPgs = searchData.total_pages;\nconst curPage = searchData.page;\nconst totalRes = searchData.total_results;\nconsole.log(searchData);\n\n\nconst handleDecrement = ()=>{\n    props.setPage(page - 1)\n    props.axiosSearch();\n    setReload('reload');\n}\n\nconst handleIncrement = ()=>{\n    props.setPage(page + 1)\n    props.axiosSearch();\n    setReload('reload');\n}\n\n  return (\n    <div className='pagination'>\n        <button onClick={()=>{handleDecrement()}} className=\"page_prev\">prev</button>\n        <div className='paginRes'>\n        <span>total results: {totalRes}</span><br />\n        <span>page #{curPage}</span><br />\n        <span> out of...{totalPgs}</span>\n        </div>\n        <button onClick={()=>{handleIncrement()}} className=\"page_next\">next</button>\n    </div>\n  )\n}\n",{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":36,"column":24,"nodeType":"81","messageId":"82","endLine":36,"endColumn":26},{"ruleId":"79","severity":1,"message":"80","line":49,"column":24,"nodeType":"81","messageId":"82","endLine":49,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":66,"column":8,"nodeType":"85","endLine":66,"endColumn":10,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":14,"column":31,"nodeType":"89","messageId":"90","endLine":14,"endColumn":33},{"ruleId":"87","severity":1,"message":"88","line":15,"column":31,"nodeType":"89","messageId":"90","endLine":15,"endColumn":33},{"ruleId":"83","severity":1,"message":"91","line":16,"column":8,"nodeType":"85","endLine":16,"endColumn":10,"suggestions":"92"},{"ruleId":"75","severity":1,"message":"93","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":14},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'axiosSearch'. Either include it or remove the dependency array.","ArrayExpression",["94"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'movie.id', 'tArr', and 'wArr'. Either include them or remove the dependency array.",["95"],"'reload' is assigned a value but never used.",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [axiosSearch]",{"range":"100","text":"101"},"Update the dependencies array to be: [movie.id, tArr, wArr]",{"range":"102","text":"103"},[2387,2389],"[axiosSearch]",[562,564],"[movie.id, tArr, wArr]"]