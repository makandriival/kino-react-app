{"ast":null,"code":"var _jsxFileName = \"/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/library/Library.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Watched from './Watched';\nimport ToWatch from './ToWatch';\nimport NothingHereYet from '../NothingHereYet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Library(props) {\n  _s();\n\n  const [libNav, setLibNav] = useState('watched'); // const imgBaseUrl = 'http://image.tmdb.org/t/p/w500';\n  // // const toWatchList = JSON.parse(localStorage.getItem('listToWatch'));\n  // const watchedListData = localStorage.getItem('listWatched')\n  // const watchedList = JSON.parse(watchedListData);\n  // const openModal = (id)=>{\n  //   props.openModal('open')\n  //   const clickedMovie =  watchedList.find(elem => elem.id === id);\n  //   props.getClickedMovie(clickedMovie);\n  // }\n  // const handleDelete = (id)=>{\n  //   const movieIdx = watchedList.indexOf(watchedList.find(elem => elem.id === id))\n  //   watchedList.splice( movieIdx, 1);\n  //   localStorage.setItem('listWatched' , JSON.stringify(watchedList));\n  //   // console.log(movieIdx)\n  // };\n  // console.log(watchedList)\n  // console.log(watchedList);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setLibNav('watched');\n      },\n      children: \"Watched\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setLibNav('to_watch');\n      },\n      children: \"To Watch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), libNav === 'watched' ? /*#__PURE__*/_jsxDEV(Watched, {\n      openModal: props.openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(ToWatch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 72\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Library, \"dlWE9uUIsgUNXJSjfFyLoDIgpzU=\");\n\n_c = Library;\n\nvar _c;\n\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"names":["React","useState","Watched","ToWatch","NothingHereYet","Library","props","libNav","setLibNav","openModal"],"sources":["/Users/andriimakarov/Documents/GitHub/kino-react-app/kinomak/src/components/library/Library.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Watched from './Watched';\nimport ToWatch from './ToWatch';\nimport NothingHereYet from '../NothingHereYet';\n\nexport default function Library(props) {\n  const [libNav, setLibNav] = useState('watched');\n\n  // const imgBaseUrl = 'http://image.tmdb.org/t/p/w500';\n  // // const toWatchList = JSON.parse(localStorage.getItem('listToWatch'));\n  // const watchedListData = localStorage.getItem('listWatched')\n  // const watchedList = JSON.parse(watchedListData);\n  // const openModal = (id)=>{\n  //   props.openModal('open')\n  //   const clickedMovie =  watchedList.find(elem => elem.id === id);\n  //   props.getClickedMovie(clickedMovie);\n    \n  // }\n  // const handleDelete = (id)=>{\n  //   const movieIdx = watchedList.indexOf(watchedList.find(elem => elem.id === id))\n  //   watchedList.splice( movieIdx, 1);\n  //   localStorage.setItem('listWatched' , JSON.stringify(watchedList));\n  //   // console.log(movieIdx)\n  // };\n  // console.log(watchedList)\n  // console.log(watchedList);\n\n\n  return (\n\n    <div>\n      <button onClick={()=>{setLibNav('watched')}} >Watched</button>\n      <button onClick={()=>{setLibNav('to_watch')}}>To Watch</button>\n\n      {libNav === 'watched' ? <Watched openModal={props.openModal}/> : <ToWatch/>}\n\n      {/* { watchedList === null ? <NothingHereYet/> : watchedList.map(movie =>( \n        <div className='pop_movie_list_item'>\n\n      <div key={movie.id}  onClick = {()=>{openModal(movie.id)}}>\n        <h3>{movie.title}</h3>\n        <img src={imgBaseUrl + movie.poster_path} alt={movie.title} className='most_popular_img'/>\n        <br />\n        <span className='avg_rating'> Rate: {movie.vote_average} </span>\n      </div>\n        <button onClick={()=>{handleDelete(movie.id)}}>delete</button>\n        </div>          \n      ))} */}\n      </div>\n      \n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EACrC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,SAAD,CAApC,CADqC,CAGrC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,oBAEE;IAAA,wBACE;MAAQ,OAAO,EAAE,MAAI;QAACO,SAAS,CAAC,SAAD,CAAT;MAAqB,CAA3C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAE,MAAI;QAACA,SAAS,CAAC,UAAD,CAAT;MAAsB,CAA5C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,EAIGD,MAAM,KAAK,SAAX,gBAAuB,QAAC,OAAD;MAAS,SAAS,EAAED,KAAK,CAACG;IAA1B;MAAA;MAAA;MAAA;IAAA,QAAvB,gBAAgE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAJnE;EAAA;IAAA;IAAA;IAAA;EAAA,QAFF;AAuBD;;GA9CuBJ,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}